<?php

declare(strict_types=1);

use Hyperf\Context\ApplicationContext;
use Jot\HfElastic\Migration;
use Jot\HfElastic\Migration\Mapping;

return new class(ApplicationContext::getContainer()) extends Migration {

    public const INDEX_NAME = '{{index}}';
    public bool $addPrefix = true;

    public function mapping(): Mapping
    {
        $index = new Mapping(name: self::INDEX_NAME, dynamic: '{{dynamic}}');

        $index->keyword('id');
        $index->keyword('name')->normalizer('normalizer_ascii_lower');
        $index->alias('{{index}}_id')->path('id');
        $index->defaults();

        $index->settings(
{{settings}}
        );

        return $index;
    }

    public function up(): void
    {
        $this->create($this->mapping());

    }

    public function down(): void
    {
        $this->delete(self::INDEX_NAME);
    }
};
